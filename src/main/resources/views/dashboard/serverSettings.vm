#define ($styles)
<style>
    .menu {
        display: none;
    }

    .menu.active {
        display: block;
    }
</style>
#end

#define ($content)
<form action="" class="row" method="post">
    <div class="db-menus">
        <div class="menu active" id="tab1">
            #parse('/views/dashboard/basicSettings.vm')
        </div>
        <div class="menu" id="tab2">
            <h1>Moderation settings</h1>
        </div>
        <div class="menu" id="tab3">
            <h1>Custom commands</h1>
        </div>
        <div class="menu" id="tab4">
            <h1>Welcome and leave messages</h1>
        </div>
    </div>
    ## save button here
</form>
#end

#define ($scripts)
<script>
    // <editor-fold desc="TABS" defaultstate="collapsed">
    const ul = document.getElementById('server-setting-selection2');
    const tabs = document.querySelector('.db-menus').children;

    ul.addEventListener('click', (e) => {
        if (e.target.nodeName !== 'A') {
            return;
        }

        e.preventDefault();

        setActive(e.target.getAttribute('href'));
    });

    function setActive(item) {
        for (const li of ul.children) {
            if (li.firstElementChild.getAttribute('href') === item) {
                li.classList.add('active');
            } else {
                li.classList.remove('active');
            }
        }

        for (const tab of tabs) {
            tab.classList.remove('active');
        }

        document.querySelector(item).classList.add('active');
    }
    // </editor-fold>

    // <editor-fold desc="BASIC SETTINGS" defaultstate="collapsed">
    M.FormSelect.init(document.querySelectorAll('select'));

    function displayColor(value) {
        console.log(brightnessByColor(value))

        const preview = id('embedPreview');

        preview.style.background = value;

        if (brightnessByColor(value) >= 150) {
            preview.classList.add('black-text');
            preview.classList.remove('white-text');
        } else {
            preview.classList.remove('black-text');
            preview.classList.add('white-text');
        }
    }

    displayColor('$guildColor');

    function showColorPicker() {
        id('embedColor').click()
    }

    function checkSelect(selectId, checkBox) {
        let box = id(checkBox);
        let select = id(selectId);
        if (select.value) {
            box.checked = true;
            box.disabled = false;
        } else {
            box.checked = false;
            box.disabled = true;
        }
    }

    // Adapted from https://gist.github.com/w3core/e3d9b5b6d69a3ba8671cc84714cca8a4
    function brightnessByColor (color) {
        const match = color.substr(1).match(color.length === 7 ? /(\S{2})/g : /(\S)/g);

        if (match) {
            const r = parseInt(match[0], 16);
            const g = parseInt(match[1], 16);
            const b = parseInt(match[2], 16);

            return (
                (r * 299) +
                (g * 587) +
                (b * 114)
            ) /1000;
        }

        return null;
    }
    // </editor-fold>
</script>
#end

#parse('/views/templates/base.vm')
